name: Auto Build Python Executable

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Download UPX
        run: |
          wget https://github.com/upx/upx/releases/download/v5.0.0/upx-5.0.0-amd64_linux.tar.xz
          tar -xJf upx-5.0.0-amd64_linux.tar.xz
          mv upx-5.0.0-amd64_linux upx

      - name: Build Executable
        run: |
          UPX_DIR="$PWD/upx"
          
          # 赋予 UPX 执行权限
          chmod +x $UPX_DIR/upx

          # 版本号处理
          if [ "${{ github.ref_type }}" = "tag" ]; then
            VERSION="v${{ github.ref_name }}"
          else
            VERSION="sha-${{ github.sha }}"
          fi

          # 构建命令
          pyinstaller \
            --onefile \
            --upx-dir="$UPX_DIR" \
            --name=TomatoNovelDownloader-Linux_amd64-$VERSION \
            --clean \
            2.py

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: TomatoNovelDownloader-LinuxBuild-${{ github.sha }}
          path: dist/TomatoNovelDownloader-*

      - name: Publish to Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: dist/TomatoNovelDownloader-*

  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Cache Dependencies
      uses: actions/cache@v4
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Download UPX
      run: |
        $url = "https://github.com/upx/upx/releases/download/v5.0.0/upx-5.0.0-win64.zip"
        Invoke-WebRequest -Uri $url -OutFile upx.zip
        Expand-Archive -Path upx.zip -DestinationPath upx

    - name: Build Executable
      run: |
        $upxDir = "$pwd\upx\upx-5.0.0-win64"
        
        if (Test-Path "$upxDir\upx.exe") {
            icacls "$upxDir\upx.exe" /grant Everyone:F
        }

        if ("${{ github.ref_type }}" -eq "tag") {
          $version = "v${{ github.ref_name }}"
        } else {
          $version = "sha-${{ github.sha }}"
        }
        
        # GUI版本构建命令
        pyinstaller --onefile `
          --upx-dir "$upxDir" `
          --name=TomatoNovelDownloader-Win64-$version `
          --clean `
          2.py

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: TomatoNovelDownloader-WinBuild-${{ github.sha }}
        path: dist\TomatoNovelDownloader-*.exe

    - name: Publish to Release
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        files: dist/TomatoNovelDownloader-*.exe
